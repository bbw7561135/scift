MAKEFLAGS = -s
FC = ifort
FCFLAGS = -traceback -w -I. -fpp -I../src -mkl -g
LDFLAGS = -L../src -lscift
TLIB = 

all:  $(TLIB) boundStates molecule.compare molecule.fv molecule.inertia molecule.mass molecule.minMult molecule.orient molecule.radius molecule.random molecule.rotate molecule.vrandom n1df.compare n1df.convert n1df.derivative n1df.fourier n1df.func n1df.gabor n1df.gsmooth n1df.init n1df.innerProduct n1df.integrate n1df.interp n1df.join n1df.norm n1df.oper n1df.peakFinder n1df.resize n1df.smooth n3df.convert n3df.eval n3df.func n3df.oper 

boundStates: boundStates.f90  
	fmake
	echo -n 'Building boundStates.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) boundStates.f90  -o boundStates $(LDFLAGS)

molecule.compare: molecule.compare.f90  
	fmake
	echo -n 'Building molecule.compare.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.compare.f90  -o molecule.compare $(LDFLAGS)

molecule.fv: molecule.fv.f90  
	fmake
	echo -n 'Building molecule.fv.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.fv.f90  -o molecule.fv $(LDFLAGS)

molecule.inertia: molecule.inertia.f90  
	fmake
	echo -n 'Building molecule.inertia.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.inertia.f90  -o molecule.inertia $(LDFLAGS)

molecule.mass: molecule.mass.f90  
	fmake
	echo -n 'Building molecule.mass.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.mass.f90  -o molecule.mass $(LDFLAGS)

molecule.minMult: molecule.minMult.f90  
	fmake
	echo -n 'Building molecule.minMult.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.minMult.f90  -o molecule.minMult $(LDFLAGS)

molecule.orient: molecule.orient.f90  
	fmake
	echo -n 'Building molecule.orient.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.orient.f90  -o molecule.orient $(LDFLAGS)

molecule.radius: molecule.radius.f90  
	fmake
	echo -n 'Building molecule.radius.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.radius.f90  -o molecule.radius $(LDFLAGS)

molecule.random: molecule.random.f90  
	fmake
	echo -n 'Building molecule.random.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.random.f90  -o molecule.random $(LDFLAGS)

molecule.rotate: molecule.rotate.f90  
	fmake
	echo -n 'Building molecule.rotate.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.rotate.f90  -o molecule.rotate $(LDFLAGS)

molecule.vrandom: molecule.vrandom.f90  
	fmake
	echo -n 'Building molecule.vrandom.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) molecule.vrandom.f90  -o molecule.vrandom $(LDFLAGS)

n1df.compare: n1df.compare.f90  
	fmake
	echo -n 'Building n1df.compare.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.compare.f90  -o n1df.compare $(LDFLAGS)

n1df.convert: n1df.convert.f90  
	fmake
	echo -n 'Building n1df.convert.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.convert.f90  -o n1df.convert $(LDFLAGS)

n1df.derivative: n1df.derivative.f90  
	fmake
	echo -n 'Building n1df.derivative.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.derivative.f90  -o n1df.derivative $(LDFLAGS)

n1df.fourier: n1df.fourier.f90  
	fmake
	echo -n 'Building n1df.fourier.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.fourier.f90  -o n1df.fourier $(LDFLAGS)

n1df.func: n1df.func.f90  
	fmake
	echo -n 'Building n1df.func.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.func.f90  -o n1df.func $(LDFLAGS)

n1df.gabor: n1df.gabor.f90  
	fmake
	echo -n 'Building n1df.gabor.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.gabor.f90  -o n1df.gabor $(LDFLAGS)

n1df.gsmooth: n1df.gsmooth.f90  
	fmake
	echo -n 'Building n1df.gsmooth.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.gsmooth.f90  -o n1df.gsmooth $(LDFLAGS)

n1df.init: n1df.init.f90  
	fmake
	echo -n 'Building n1df.init.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.init.f90  -o n1df.init $(LDFLAGS)

n1df.innerProduct: n1df.innerProduct.f90  
	fmake
	echo -n 'Building n1df.innerProduct.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.innerProduct.f90  -o n1df.innerProduct $(LDFLAGS)

n1df.integrate: n1df.integrate.f90  
	fmake
	echo -n 'Building n1df.integrate.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.integrate.f90  -o n1df.integrate $(LDFLAGS)

n1df.interp: n1df.interp.f90  
	fmake
	echo -n 'Building n1df.interp.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.interp.f90  -o n1df.interp $(LDFLAGS)

n1df.join: n1df.join.f90  
	fmake
	echo -n 'Building n1df.join.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.join.f90  -o n1df.join $(LDFLAGS)

n1df.norm: n1df.norm.f90  
	fmake
	echo -n 'Building n1df.norm.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.norm.f90  -o n1df.norm $(LDFLAGS)

n1df.oper: n1df.oper.f90  
	fmake
	echo -n 'Building n1df.oper.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.oper.f90  -o n1df.oper $(LDFLAGS)

n1df.peakFinder: n1df.peakFinder.f90  
	fmake
	echo -n 'Building n1df.peakFinder.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.peakFinder.f90  -o n1df.peakFinder $(LDFLAGS)

n1df.resize: n1df.resize.f90  
	fmake
	echo -n 'Building n1df.resize.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.resize.f90  -o n1df.resize $(LDFLAGS)

n1df.smooth: n1df.smooth.f90  
	fmake
	echo -n 'Building n1df.smooth.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n1df.smooth.f90  -o n1df.smooth $(LDFLAGS)

n3df.convert: n3df.convert.f90  
	fmake
	echo -n 'Building n3df.convert.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n3df.convert.f90  -o n3df.convert $(LDFLAGS)

n3df.eval: n3df.eval.f90  
	fmake
	echo -n 'Building n3df.eval.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n3df.eval.f90  -o n3df.eval $(LDFLAGS)

n3df.func: n3df.func.f90  
	fmake
	echo -n 'Building n3df.func.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n3df.func.f90  -o n3df.func $(LDFLAGS)

n3df.oper: n3df.oper.f90  
	fmake
	echo -n 'Building n3df.oper.f90 '
	time -f "(%E)" $(FC) $(FCFLAGS) n3df.oper.f90  -o n3df.oper $(LDFLAGS)

clean:
	rm -f *.o *.mod *~ .deps boundStates molecule.compare molecule.fv molecule.inertia molecule.mass molecule.minMult molecule.orient molecule.radius molecule.random molecule.rotate molecule.vrandom n1df.compare n1df.convert n1df.derivative n1df.fourier n1df.func n1df.gabor n1df.gsmooth n1df.init n1df.innerProduct n1df.integrate n1df.interp n1df.join n1df.norm n1df.oper n1df.peakFinder n1df.resize n1df.smooth n3df.convert n3df.eval n3df.func n3df.oper  2> /dev/null

distclean:
	rm -f *.o *.mod *~ .deps Makefile boundStates molecule.compare molecule.fv molecule.inertia molecule.mass molecule.minMult molecule.orient molecule.radius molecule.random molecule.rotate molecule.vrandom n1df.compare n1df.convert n1df.derivative n1df.fourier n1df.func n1df.gabor n1df.gsmooth n1df.init n1df.innerProduct n1df.integrate n1df.interp n1df.join n1df.norm n1df.oper n1df.peakFinder n1df.resize n1df.smooth n3df.convert n3df.eval n3df.func n3df.oper  2> /dev/null

Makefile: .deps
	fmake

.deps:
	fmake
